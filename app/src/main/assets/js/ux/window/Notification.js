Ext.define("Ext.ux.window.Notification", { extend: "Ext.window.Window", alias: "widget.uxNotification", cls: "ux-notification-window", autoClose: !0, autoHeight: !0, plain: !1, draggable: !1, shadow: !1, focus: Ext.emptyFn, manager: null, useXAxis: !1, position: "br", spacing: 6, paddingX: 30, paddingY: 10, slideInAnimation: "easeIn", slideBackAnimation: "bounceOut", slideInDuration: 1500, slideBackDuration: 1e3, hideDuration: 500, autoCloseDelay: 7e3, stickOnClick: !0, stickWhileHover: !0, isHiding: !1, isFading: !1, destroyAfterHide: !1, closeOnMouseOut: !1, xPos: 0, yPos: 0, statics: { defaultManager: { el: null } }, initComponent: function () { var e = this; Ext.isDefined(e.corner) && (e.position = e.corner), Ext.isDefined(e.slideDownAnimation) && (e.slideBackAnimation = e.slideDownAnimation), Ext.isDefined(e.autoDestroyDelay) && (e.autoCloseDelay = e.autoDestroyDelay), Ext.isDefined(e.autoHideDelay) && (e.autoCloseDelay = e.autoHideDelay), Ext.isDefined(e.autoHide) && (e.autoClose = e.autoHide), Ext.isDefined(e.slideInDelay) && (e.slideInDuration = e.slideInDelay), Ext.isDefined(e.slideDownDelay) && (e.slideBackDuration = e.slideDownDelay), Ext.isDefined(e.fadeDelay) && (e.hideDuration = e.fadeDelay), e.position = e.position.replace(/c/, ""), e.updateAlignment(e.position), e.setManager(e.manager), e.callParent(arguments) }, onRender: function () { var e = this; e.callParent(arguments), e.el.hover(function () { e.mouseIsOver = !0 }, function () { e.mouseIsOver = !1, e.closeOnMouseOut && (e.closeOnMouseOut = !1, e.close()) }, e) }, updateAlignment: function (e) { var i = this; switch (e) { case "br": i.paddingFactorX = -1, i.paddingFactorY = -1, i.siblingAlignment = "br-br", i.managerAlignment = i.useXAxis ? "bl-br" : "tr-br"; break; case "bl": i.paddingFactorX = 1, i.paddingFactorY = -1, i.siblingAlignment = "bl-bl", i.managerAlignment = i.useXAxis ? "br-bl" : "tl-bl"; break; case "tr": i.paddingFactorX = -1, i.paddingFactorY = 1, i.siblingAlignment = "tr-tr", i.managerAlignment = i.useXAxis ? "tl-tr" : "br-tr"; break; case "tl": i.paddingFactorX = 1, i.paddingFactorY = 1, i.siblingAlignment = "tl-tl", i.managerAlignment = i.useXAxis ? "tr-tl" : "bl-tl"; break; case "b": i.paddingFactorX = 0, i.paddingFactorY = -1, i.siblingAlignment = "b-b", i.useXAxis = 0, i.managerAlignment = "t-b"; break; case "t": i.paddingFactorX = 0, i.paddingFactorY = 1, i.siblingAlignment = "t-t", i.useXAxis = 0, i.managerAlignment = "b-t"; break; case "l": i.paddingFactorX = 1, i.paddingFactorY = 0, i.siblingAlignment = "l-l", i.useXAxis = 1, i.managerAlignment = "r-l"; break; case "r": i.paddingFactorX = -1, i.paddingFactorY = 0, i.siblingAlignment = "r-r", i.useXAxis = 1, i.managerAlignment = "l-r" } }, getXposAlignedToManager: function () { var e = this, i = 0; if (e.manager && e.manager.el && e.manager.el.dom) { if (!e.useXAxis) return e.el.getLeft(); "br" == e.position || "tr" == e.position || "r" == e.position ? (i += e.manager.el.getAnchorXY("r")[0], i -= e.el.getWidth() + e.paddingX) : (i += e.manager.el.getAnchorXY("l")[0], i += e.paddingX) } return i }, getYposAlignedToManager: function () { var e = this, i = 0; if (e.manager && e.manager.el && e.manager.el.dom) { if (e.useXAxis) return e.el.getTop(); "br" == e.position || "bl" == e.position || "b" == e.position ? (i += e.manager.el.getAnchorXY("b")[1], i -= e.el.getHeight() + e.paddingY) : (i += e.manager.el.getAnchorXY("t")[1], i += e.paddingY) } return i }, getXposAlignedToSibling: function (e) { var i = this; return i.useXAxis ? "tl" == i.position || "bl" == i.position || "l" == i.position ? e.xPos + e.el.getWidth() + e.spacing : e.xPos - i.el.getWidth() - i.spacing : i.el.getLeft() }, getYposAlignedToSibling: function (e) { var i = this; return i.useXAxis ? i.el.getTop() : "tr" == i.position || "tl" == i.position || "t" == i.position ? e.yPos + e.el.getHeight() + e.spacing : e.yPos - i.el.getHeight() - e.spacing }, getNotifications: function (e) { var i = this; return i.manager.notifications[e] || (i.manager.notifications[e] = []), i.manager.notifications[e] }, setManager: function (e) { var i = this; i.manager = e, "string" == typeof i.manager && (i.manager = Ext.getCmp(i.manager)), i.manager || (i.manager = i.statics().defaultManager, i.manager.el || (i.manager.el = Ext.getBody())), "undefined" == typeof i.manager.notifications && (i.manager.notifications = {}) }, beforeShow: function () { var e = this; e.stickOnClick && e.body && e.body.dom && Ext.fly(e.body.dom).on("click", function () { e.cancelAutoClose(), e.addCls("notification-fixed") }, e), e.autoClose && (e.task = new Ext.util.DelayedTask(e.doAutoClose, e), e.task.delay(e.autoCloseDelay)), e.el.setX(-1e4), e.el.setOpacity(1) }, afterShow: function () { var e = this; e.callParent(arguments); var i = e.getNotifications(e.managerAlignment); i.length ? (e.el.alignTo(i[i.length - 1].el, e.siblingAlignment, [0, 0]), e.xPos = e.getXposAlignedToSibling(i[i.length - 1]), e.yPos = e.getYposAlignedToSibling(i[i.length - 1])) : (e.el.alignTo(e.manager.el, e.managerAlignment, [e.paddingX * e.paddingFactorX, e.paddingY * e.paddingFactorY], !1), e.xPos = e.getXposAlignedToManager(), e.yPos = e.getYposAlignedToManager()), Ext.Array.include(i, e), e.el.animate({ from: { x: e.el.getX(), y: e.el.getY() }, to: { x: e.xPos, y: e.yPos, opacity: 1 }, easing: e.slideInAnimation, duration: e.slideInDuration, dynamic: !0 }) }, slideBack: function () { var e = this, i = e.getNotifications(e.managerAlignment), n = Ext.Array.indexOf(i, e); !e.isHiding && e.el && e.manager && e.manager.el && e.manager.el.dom && e.manager.el.isVisible() && (n ? (e.xPos = e.getXposAlignedToSibling(i[n - 1]), e.yPos = e.getYposAlignedToSibling(i[n - 1])) : (e.xPos = e.getXposAlignedToManager(), e.yPos = e.getYposAlignedToManager()), e.stopAnimation(), e.el.animate({ to: { x: e.xPos, y: e.yPos }, easing: e.slideBackAnimation, duration: e.slideBackDuration, dynamic: !0 })) }, cancelAutoClose: function () { var e = this; e.autoClose && e.task.cancel() }, doAutoClose: function () { var e = this; e.stickWhileHover && e.mouseIsOver ? e.closeOnMouseOut = !0 : e.close() }, removeFromManager: function () { var e = this; if (e.manager) { var i = e.getNotifications(e.managerAlignment), n = Ext.Array.indexOf(i, e); if (-1 != n) for (Ext.Array.erase(i, n, 1) ; n < i.length; n++) i[n].slideBack() } }, hide: function () { var e = this; return e.isHiding ? e.isFading || (e.callParent(arguments), e.isHiding = !1) : (e.isHiding = !0, e.isFading = !0, e.cancelAutoClose(), e.el && e.el.fadeOut({ opacity: 0, easing: "easeIn", duration: e.hideDuration, remove: e.destroyAfterHide, listeners: { afteranimate: function () { e.isFading = !1, e.removeCls("notification-fixed"), e.removeFromManager(), e.hide(e.animateTarget, e.doClose, e) } } })), e }, destroy: function () { var e = this; e.hidden ? e.callParent(arguments) : (e.destroyAfterHide = !0, e.hide(e.animateTarget, e.doClose, e)) } });