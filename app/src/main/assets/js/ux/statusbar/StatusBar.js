Ext.define("Ext.ux.statusbar.StatusBar", { extend: "Ext.toolbar.Toolbar", alternateClassName: "Ext.ux.StatusBar", alias: "widget.statusbar", requires: ["Ext.toolbar.TextItem"], cls: "x-statusbar", busyIconCls: "x-status-busy", busyText: "Loading...", autoClear: 5e3, emptyText: "&#160;", activeThreadId: 0, initComponent: function () { var t = "right" === this.statusAlign; this.callParent(arguments), this.currIconCls = this.iconCls || this.defaultIconCls, this.statusEl = Ext.create("Ext.toolbar.TextItem", { cls: "x-status-text " + (this.currIconCls || ""), text: this.text || this.defaultText || "" }), t ? (this.cls += " x-status-right", this.add("->"), this.add(this.statusEl)) : (this.insert(0, this.statusEl), this.insert(1, "->")) }, setStatus: function (t) { var s = this; if (t = t || {}, Ext.suspendLayouts(), Ext.isString(t) && (t = { text: t }), void 0 !== t.text && s.setText(t.text), void 0 !== t.iconCls && s.setIcon(t.iconCls), t.clear) { var e = t.clear, a = s.autoClear, r = { useDefaults: !0, anim: !0 }; Ext.isObject(e) ? (e = Ext.applyIf(e, r), e.wait && (a = e.wait)) : Ext.isNumber(e) ? (a = e, e = r) : Ext.isBoolean(e) && (e = r), e.threadId = this.activeThreadId, Ext.defer(s.clearStatus, a, s, [e]) } return Ext.resumeLayouts(!0), s }, clearStatus: function (t) { t = t || {}; var s = this, e = s.statusEl; if (t.threadId && t.threadId !== s.activeThreadId) return s; var a = t.useDefaults ? s.defaultText : s.emptyText, r = t.useDefaults && s.defaultIconCls ? s.defaultIconCls : ""; return t.anim ? e.el.puff({ remove: !1, useDisplay: !0, callback: function () { e.el.show(), s.setStatus({ text: a, iconCls: r }) } }) : s.setStatus({ text: a, iconCls: r }), s }, setText: function (t) { var s = this; return s.activeThreadId++, s.text = t || "", s.rendered && s.statusEl.setText(s.text), s }, getText: function () { return this.text }, setIcon: function (t) { var s = this; return s.activeThreadId++, t = t || "", s.rendered ? (s.currIconCls && (s.statusEl.removeCls(s.currIconCls), s.currIconCls = null), t.length > 0 && (s.statusEl.addCls(t), s.currIconCls = t)) : s.currIconCls = t, s }, showBusy: function (t) { return Ext.isString(t) && (t = { text: t }), t = Ext.applyIf(t || {}, { text: this.busyText, iconCls: this.busyIconCls }), this.setStatus(t) } });